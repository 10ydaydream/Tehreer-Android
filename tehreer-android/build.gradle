apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    publishedGroupId = 'com.github.mta452'
    publishedArtifactId = 'tehreer-android'

    libraryName = 'Tehreer-Android'
    libraryVersion = '2.8'
    libraryDescription = 'A library that gives full control over text related technologies such as bidirectional algorithm, open type shaping, text typesetting and text rendering.'

    siteUrl = 'https://github.com/Tehreer/Tehreer-Android'

    developerId = 'mta452'
    developerName = 'Muhammad Tayyab Akram'
    developerEmail = 'dear_tayyab@yahoo.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = [ 'Apache-2.0' ]

    scmConnection = 'scm:git:github.com/Tehreer/Tehreer-Android.git'
    scmDeveloperConnection = 'scm:git:ssh://github.com/Tehreer/Tehreer-Android.git'
    scmUrl = 'https://github.com/Tehreer/Tehreer-Android/tree/master'

    mavenName = 'sonatype'
    mavenUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

ext['signing.keyId'] = properties.getProperty('signing.keyId')
ext['signing.password'] = properties.getProperty('signing.password')
ext['signing.secretKeyRingFile'] = properties.getProperty('signing.secretKeyRingFile')
ext['ossrhUsername'] = properties.getProperty('ossrhUsername')
ext['ossrhPassword'] = properties.getProperty('ossrhPassword')
ext['sonatypeStagingProfileId'] = properties.getProperty('sonatypeStagingProfileId')

group = publishedGroupId
version = libraryVersion

android {
    compileSdkVersion 33
    buildToolsVersion '31.0.0'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 33
        versionCode 8
        versionName libraryVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    sourceSets {
        androidTest {
            externalNativeBuild {
                ndkBuild {
                    path 'src/androidTest/jni/Android.mk'
                }
            }
        }
        main {
            externalNativeBuild {
                ndkBuild {
                    path 'src/main/jni/Android.mk'
                }
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            externalNativeBuild {
                ndkBuild {
                    cFlags '-fvisibility=hidden'
                    cppFlags '-fvisibility=hidden'
                    arguments 'APP_LDFLAGS+=-s'
                }
            }
        }
    }
}

configurations {
    doclet
}

dependencies {
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'org.mockito:mockito-core:4.5.1'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito-inline:2.28.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    /* doclet project(':doclet') */
}

artifacts {
    task apiDocs(type: Javadoc, dependsOn: configurations.doclet) {
        title = "$libraryName $libraryVersion API"
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        exclude '**/internal/**'

        options.doclet = "ExcludeDoclet"
        options.docletpath = configurations.doclet.files.asType(List)
        options.links("https://developer.android.com/reference/")
        options.addStringOption("bottom", "Copyright &copy; 2022 $developerName. All rights reserved.")
    }

    task javadocJar(type: Jar, dependsOn: apiDocs) {
        archiveClassifier.set('javadoc')
        from apiDocs.destinationDir
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    archives javadocJar
    archives sourcesJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId publishedGroupId
                artifactId publishedArtifactId
                version libraryVersion

                from components.release

                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = libraryName
                    description = libraryDescription
                    url = siteUrl

                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }

                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }

                    scm {
                        connection = scmConnection
                        developerConnection = scmDeveloperConnection
                        url = scmUrl
                    }
                }
            }
        }

        repositories {
            maven {
                name = mavenName
                url = mavenUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}
